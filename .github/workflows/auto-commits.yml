# This is a basic workflow to help you get started with Actions

name: CI - Setup environment, build & add autogenerated files (migrations, SQL & schema image)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Step 0 - Setup environment (apt-get)
        run: |
          sudo apt-get update 
          sudo apt-get install -y python-psycopg2 graphviz libgraphviz-dev
          sudo apt-get install -y default-libmysqlclient-dev build-essential
          sudo apt-get remove -y default-libmysqlclient-dev build-essential
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Step 1 - Start MariaDB
        uses: getong/mariadb-action@v1.1
        with:
          mysql database: 'docker' # Optional, default value is "test". The specified database which will be create
          mysql root password: 'docker-root' # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'docker' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: docker # Required if "mysql user" exists. The password for the "mysql user"
      - name : Step 2 - Set up Python (3.6)
        uses: actions/checkout@v2
        with:
          python-version: 3.6
      - name: Step 3 - Install dependencies         
        run: pip install -e .
      - name: Step 4 - Apply existing migrations
        run: python3.6 manage.py migrate
      - name: Step 5 - Create new migrations
        run: python3.6 manage.py makemigrations xchem_db
      - name: Step 6 - Apply new migrations
        run: python3.6 manage.py migrate xchem_db
      - name: Step 7 - Create new schema image
        run: python3.6 manage.py graph_models -a -o schema.png
      - name: Step 8 - Generate SQL for ISPyB
        run: python3.6 run_sql_gen.py
      - name: Step 9 - Append new SQL to master file
        run: python3.6 compile_init.py
      - name: Step 10 - Commit changed files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Auto-commit of new versions of migrations, SQL files & schema image
