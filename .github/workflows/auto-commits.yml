# This is a basic workflow to help you get started with Actions

name: CI - Setup environment, build & add autogenerated files (migrations, SQL & schema image)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    services:
            mysql:
                image: mariadb:10.4
                env:
                  MYSQL_ROOT_PASSWORD: docker-root
                  MYSQL_DATABASE: docker
                  MYSQL_USER: docker
                  MYSQL_PASSWORD: docker 
                  MYSQL_HOST: db
                ports:
                  - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Step 1 - Setup environment (apt-get)
        run: |
          sudo apt-get update 
          sudo apt-get install -y libpq-dev graphviz libgraphviz-dev
          sudo apt-get install -y default-libmysqlclient-dev build-essential
          sudo apt-get remove -y default-libmysqlclient-dev build-essential
      - name : Step 2 - Checkout code
        uses: actions/checkout@v2
      - name: Step 3 - Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Step 4 - Install Dependencies (requirements.txt)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Step 5 - Install dependencies (setup.py)        
        run: pip install -e .
      - name: Step 6 - Apply existing migrations
        run: python manage.py migrate
      - name: Step 7 - Create new migrations
        run: python manage.py makemigrations xchem_db
      - name: Step 8 - Apply new migrations
        run: python manage.py migrate xchem_db
      - name: Step 9 - Create new schema image
        run: python manage.py graph_models -a -o schema.png
      - name: Step 10 - Generate SQL for ISPyB
        run: python run_sql_gen.py
      - name: Step 11 - Append new SQL to master file
        run: python compile_init.py
      - name: Step 12 - Commit changed files
        if: $${{ matrix.python-version }} == 3.6
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Auto-commit of new versions of migrations, SQL files & schema image
          # push_options: --force
          file_pattern: '*.png *.sql sql/*.sql */migrations/*'
